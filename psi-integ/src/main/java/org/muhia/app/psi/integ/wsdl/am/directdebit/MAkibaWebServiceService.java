
package org.muhia.app.psi.integ.wsdl.am.directdebit;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "MAkibaWebServiceService", targetNamespace = "http://tempuri.org/", wsdlLocation = "apis/AirtelMoneyDirectDebit.wsdl")
public class MAkibaWebServiceService
        extends Service {

    private final static URL MAKIBAWEBSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException MAKIBAWEBSERVICESERVICE_EXCEPTION;
    private final static QName MAKIBAWEBSERVICESERVICE_QNAME = new QName("http://tempuri.org/", "MAkibaWebServiceService");

    static {
        MAKIBAWEBSERVICESERVICE_WSDL_LOCATION = org.muhia.app.psi.integ.wsdl.am.directdebit.MAkibaWebServiceService.class.getResource("apis/AirtelMoneyDirectDebit.wsdl");
        WebServiceException e = null;
        if (MAKIBAWEBSERVICESERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'apis/AirtelMoneyDirectDebit.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        MAKIBAWEBSERVICESERVICE_EXCEPTION = e;
    }

    public MAkibaWebServiceService() {
        super(__getWsdlLocation(), MAKIBAWEBSERVICESERVICE_QNAME);
    }

    public MAkibaWebServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MAKIBAWEBSERVICESERVICE_QNAME, features);
    }

    public MAkibaWebServiceService(URL wsdlLocation) {
        super(wsdlLocation, MAKIBAWEBSERVICESERVICE_QNAME);
    }

    public MAkibaWebServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MAKIBAWEBSERVICESERVICE_QNAME, features);
    }

    public MAkibaWebServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MAkibaWebServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (MAKIBAWEBSERVICESERVICE_EXCEPTION != null) {
            throw MAKIBAWEBSERVICESERVICE_EXCEPTION;
        }
        return MAKIBAWEBSERVICESERVICE_WSDL_LOCATION;
    }

    /**
     * @return returns ServiceSoap
     */
    @WebEndpoint(name = "ServiceSoapSoapPort")
    public ServiceSoap getServiceSoapSoapPort() {
        return super.getPort(new QName("http://tempuri.org/", "ServiceSoapSoapPort"), ServiceSoap.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ServiceSoap
     */
    @WebEndpoint(name = "ServiceSoapSoapPort")
    public ServiceSoap getServiceSoapSoapPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "ServiceSoapSoapPort"), ServiceSoap.class, features);
    }

}
